name: erb_flutter_boilerplate

packages:
  - .
  - packages/*

command:
  bootstrap:
    # It seems so that running "pub get" in parallel has some issues (like
    # https://github.com/dart-lang/pub/issues/3404). Disabling this feature
    # makes the CI much more stable.
    runPubGetInParallel: false

    hooks:
      pre: echo `bootstrap command is running...`

      # Generate environment files which should not be committed to the repository.
      # Instead, they are generated during the CI process before checking
      # if the rest of the package's code generation is up to date.
      # post:

# See https://github.com/firebase/flutterfire/blob/master/melos.yaml for more examples
scripts:
  lint:
    run: melos run analyze && melos run format
    description: Run all static analysis checks.

  analyze:
    # We are setting the concurrency to 1 because a higher concurrency can crash
    # the analysis server on low performance machines (like GitHub Actions).
    run: |
      melos exec -c 1 -- \
        dart analyze . --fatal-infos
    description: |
      Run `dart analyze` in all packages.
       - Note: you can also rely on your IDEs Dart Analysis / Issues window.

  format:
    run: melos exec dart format . --set-exit-if-changed
    description: Run `flutter format` checks for all packages.

  format:fix:
    run: melos exec dart format . --fix
    description: Run `flutter format` for all packages.

  generate:
    run: |
      melos run generate:pkg && melos run generate:i18n
    description: Run generate in all packages.

  generate:pkg:
    run: |
      melos exec -c 1 --depends-on=build_runner \
        "dart run build_runner build --delete-conflicting-outputs"
    description: run `build_runner` to generate code in all packages

  generate:i18n:
    run: dart run slang
    description: Run `dart run slang` generate dart file
    packageFilters:
      dirExists:
        - lib/i18n

  watch:i18n:
    run: dart run slang watch
    exec:
      failFast: true
    description: Run `dart run slang watch` auto Rebuild generate dart file
    packageFilters:
      dirExists:
        - lib/i18n

  watch:pkg:
    run: dart run build_runner watch
    exec:
      # concurrency: 1
      failFast: true
    description: Run `build_runner watch` in the selected package. If all is selected, the command will only run in the first package.
    packageFilters:
      dependsOn: build_runner
      noDependsOn: envied

  pub-outdated:
    run: melos exec dart pub outdated
    description: Run `dart pub outdated` for all packages.

  pub-upgrade:
    # May fails until https://github.com/dart-lang/pub/pull/3920 is released
    run: melos exec dart pub upgrade --major-versions
    description: Run `dart pub upgrade --major-versions` for all packages.
